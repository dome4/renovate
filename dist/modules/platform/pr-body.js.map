{"version":3,"file":"pr-body.js","sourceRoot":"","sources":["../../../lib/modules/platform/pr-body.ts"],"names":[],"mappings":";;;;AAAA,0DAA0B;AAC1B,4CAA+C;AAC/C,4CAAyC;AAGzC,SAAS,sBAAsB,CAAC,KAAa;IAC3C,OAAO,KAAK,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,gBAAgB,CAAC,EAAE,EAAE,CAAC,CAAC;AACpD,CAAC;AAED,MAAM,eAAe,GAAG,IAAA,aAAK,EAAC,8BAA8B,CAAC,CAAC;AAE9D,SAAgB,QAAQ,CAAC,IAAwB;IAC/C,IAAI,MAAM,GAAG,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IAChC,MAAM,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IACvD,IAAI,eAAe,GAAG,CAAC,CAAC,EAAE;QACxB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;KAC3C;IACD,MAAM,GAAG,IAAA,mBAAW,EAAC,MAAM,CAAC,CAAC;IAC7B,MAAM,GAAG,sBAAsB,CAAC,MAAM,CAAC,CAAC;IACxC,MAAM,GAAG,IAAA,eAAK,EAAC,MAAM,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAChD,OAAO,MAAM,CAAC;AAChB,CAAC;AAVD,4BAUC;AAED,SAAgB,iBAAiB,CAAC,IAAwB;IACxD,OAAO,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,6BAA6B,CAAC,CAAC;AACzD,CAAC;AAFD,8CAEC;AAED,SAAgB,eAAe,CAC7B,KAAgC;IAEhC,MAAM,GAAG,GAAG,KAAK,IAAI,EAAE,CAAC;IACxB,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC3B,MAAM,MAAM,GAAiB,EAAE,IAAI,EAAE,CAAC;IAEtC,MAAM,eAAe,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;IAC/C,IAAI,eAAe,EAAE;QACnB,MAAM,CAAC,eAAe,GAAG,eAAe,CAAC;KAC1C;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAbD,0CAaC","sourcesContent":["import hasha from 'hasha';\nimport { stripEmojis } from '../../util/emoji';\nimport { regEx } from '../../util/regex';\nimport type { PrBodyStruct } from './types';\n\nfunction noWhitespaceOrHeadings(input: string): string {\n  return input.replace(regEx(/\\r?\\n|\\r|\\s|#/g), '');\n}\n\nconst reviewableRegex = regEx(/\\s*<!-- Reviewable:start -->/);\n\nexport function hashBody(body: string | undefined): string {\n  let result = body?.trim() ?? '';\n  const reviewableIndex = result.search(reviewableRegex);\n  if (reviewableIndex > -1) {\n    result = result.slice(0, reviewableIndex);\n  }\n  result = stripEmojis(result);\n  result = noWhitespaceOrHeadings(result);\n  result = hasha(result, { algorithm: 'sha256' });\n  return result;\n}\n\nexport function isRebaseRequested(body: string | undefined): boolean {\n  return !!body?.includes(`- [x] <!-- rebase-check -->`);\n}\n\nexport function getPrBodyStruct(\n  input: string | undefined | null\n): PrBodyStruct {\n  const str = input ?? '';\n  const hash = hashBody(str);\n  const result: PrBodyStruct = { hash };\n\n  const rebaseRequested = isRebaseRequested(str);\n  if (rebaseRequested) {\n    result.rebaseRequested = rebaseRequested;\n  }\n\n  return result;\n}\n"]}